{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/messydesk/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = nodeId => {\n  _s();\n\n  const [noteContent, setNote] = useState('');\n\n  const saveToState = event => {\n    setNote(event.target.value);\n    localStorage.setItem(nodeId, event.target.value);\n    console.log(localStorage.getItem(nodeId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-4 shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control rounded-0 border-0 \",\n            id: \"exampleFormControlTextarea1\",\n            rows: \"15\",\n            placeholder: \"\\u270F\\uFE0F  Write something...\",\n            onChange: saveToState,\n            value: !localStorage.getItem(nodeId) ? localStorage.getItem(nodeId) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Note, \"xeL/21JVNUXa7EaU9yK61hJP/GY=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/matthew/messydesk/src/components/Note.js"],"names":["useState","Note","nodeId","noteContent","setNote","saveToState","event","target","value","localStorage","setItem","console","log","getItem"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,IAAI,GAAIC,MAAD,IAAY;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBJ,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAE3BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBR,MAArB,EAA6BI,KAAK,CAACC,MAAN,CAAaC,KAA1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,OAAb,CAAsBX,MAAtB,CAAZ;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAU,YAAA,SAAS,EAAC,kCAApB;AAAuD,YAAA,EAAE,EAAC,6BAA1D;AAAwF,YAAA,IAAI,EAAC,IAA7F;AAAkG,YAAA,WAAW,EAAC,kCAA9G;AAAuI,YAAA,QAAQ,EAAEG,WAAjJ;AAA8J,YAAA,KAAK,EAAG,CAACI,YAAY,CAACI,OAAb,CAAqBX,MAArB,CAAF,GAAkCO,YAAY,CAACI,OAAb,CAAqBX,MAArB,CAAlC,GAAiE;AAAtO;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMD,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import { useState } from 'react';\n\nconst Note = (nodeId) => {\n    const [noteContent, setNote] = useState('');\n\n\n    const saveToState = (event) => {\n\n        setNote(event.target.value);\n        localStorage.setItem(nodeId, event.target.value);\n        console.log(localStorage.getItem( nodeId));\n    }\n    return (\n        <div className=\"note\">\n            <div className=\"card mt-4 shadow-sm\">\n                <div className=\"card-body\">\n                    <div className=\"form-group\">\n                        <textarea className=\"form-control rounded-0 border-0 \" id=\"exampleFormControlTextarea1\" rows=\"15\" placeholder=\"✏️  Write something...\" onChange={saveToState} value={(!localStorage.getItem(nodeId)) ? localStorage.getItem(nodeId) : \"\"}></textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}